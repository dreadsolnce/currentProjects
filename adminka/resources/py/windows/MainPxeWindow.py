# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainPxeWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainPxeWindow(object):
    def setupUi(self, MainPxeWindow, width=None, height=None):
        MainPxeWindow.setObjectName("MainPxeWindow")
        MainPxeWindow.resize(width, height)
        font = QtGui.QFont()
        font.setKerning(True)
        MainPxeWindow.setFont(font)
        MainPxeWindow.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../resources/ico/logo.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainPxeWindow.setWindowIcon(icon)
        MainPxeWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainPxeWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.centralwidget = QtWidgets.QWidget(MainPxeWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.checkBox_pxe_desktop = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_pxe_desktop.setEnabled(False)
        self.checkBox_pxe_desktop.setMinimumSize(QtCore.QSize(26, 20))
        self.checkBox_pxe_desktop.setMaximumSize(QtCore.QSize(26, 20))
        self.checkBox_pxe_desktop.setStyleSheet("QCheckBox::indicator { width: 18px; height: 18px; }")
        self.checkBox_pxe_desktop.setText("")
        self.checkBox_pxe_desktop.setObjectName("checkBox_pxe_desktop")
        self.gridLayout.addWidget(self.checkBox_pxe_desktop, 6, 3, 1, 1)
        self.checkBox_pxe_change = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_pxe_change.setObjectName("checkBox_pxe_change")
        self.gridLayout.addWidget(self.checkBox_pxe_change, 1, 0, 1, 1)
        self.radioButton_ins = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_ins.setEnabled(False)
        self.radioButton_ins.setObjectName("radioButton_ins")
        self.gridLayout.addWidget(self.radioButton_ins, 3, 0, 1, 1)
        self.label_pxe_auto = QtWidgets.QLabel(self.centralwidget)
        self.label_pxe_auto.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_auto.sizePolicy().hasHeightForWidth())
        self.label_pxe_auto.setSizePolicy(sizePolicy)
        self.label_pxe_auto.setObjectName("label_pxe_auto")
        self.gridLayout.addWidget(self.label_pxe_auto, 5, 0, 1, 1)
        self.pushButton_pxe_path = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_pxe_path.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_pxe_path.sizePolicy().hasHeightForWidth())
        self.pushButton_pxe_path.setSizePolicy(sizePolicy)
        self.pushButton_pxe_path.setMinimumSize(QtCore.QSize(100, 0))
        self.pushButton_pxe_path.setObjectName("pushButton_pxe_path")
        self.gridLayout.addWidget(self.pushButton_pxe_path, 7, 3, 1, 1)
        self.lineEdit_pxe_path = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_pxe_path.setEnabled(False)
        self.lineEdit_pxe_path.setObjectName("lineEdit_pxe_path")
        self.gridLayout.addWidget(self.lineEdit_pxe_path, 8, 0, 1, 4)
        self.label_pxe_eth = QtWidgets.QLabel(self.centralwidget)
        self.label_pxe_eth.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_eth.sizePolicy().hasHeightForWidth())
        self.label_pxe_eth.setSizePolicy(sizePolicy)
        self.label_pxe_eth.setObjectName("label_pxe_eth")
        self.gridLayout.addWidget(self.label_pxe_eth, 4, 0, 1, 3)
        self.label_pxe_picture = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_picture.sizePolicy().hasHeightForWidth())
        self.label_pxe_picture.setSizePolicy(sizePolicy)
        self.label_pxe_picture.setText("")
        self.label_pxe_picture.setPixmap(QtGui.QPixmap("../resources/ico/PXE-Logo.png"))
        self.label_pxe_picture.setScaledContents(True)
        self.label_pxe_picture.setObjectName("label_pxe_picture")
        self.gridLayout.addWidget(self.label_pxe_picture, 2, 0, 1, 3)
        self.radioButton_del = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_del.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_del.sizePolicy().hasHeightForWidth())
        self.radioButton_del.setSizePolicy(sizePolicy)
        self.radioButton_del.setObjectName("radioButton_del")
        self.gridLayout.addWidget(self.radioButton_del, 3, 2, 1, 2)
        self.checkBox_pxe_auto = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_pxe_auto.setEnabled(False)
        self.checkBox_pxe_auto.setMinimumSize(QtCore.QSize(26, 20))
        self.checkBox_pxe_auto.setMaximumSize(QtCore.QSize(26, 20))
        self.checkBox_pxe_auto.setStyleSheet("QCheckBox::indicator { width: 18px; height: 18px; }")
        self.checkBox_pxe_auto.setText("")
        self.checkBox_pxe_auto.setIconSize(QtCore.QSize(16, 16))
        self.checkBox_pxe_auto.setObjectName("checkBox_pxe_auto")
        self.gridLayout.addWidget(self.checkBox_pxe_auto, 5, 3, 1, 1)
        self.label_pxe_desktop = QtWidgets.QLabel(self.centralwidget)
        self.label_pxe_desktop.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_desktop.sizePolicy().hasHeightForWidth())
        self.label_pxe_desktop.setSizePolicy(sizePolicy)
        self.label_pxe_desktop.setObjectName("label_pxe_desktop")
        self.gridLayout.addWidget(self.label_pxe_desktop, 6, 0, 1, 1)
        self.line_pxe = QtWidgets.QFrame(self.centralwidget)
        self.line_pxe.setEnabled(True)
        self.line_pxe.setAutoFillBackground(False)
        self.line_pxe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line_pxe.setLineWidth(2)
        self.line_pxe.setMidLineWidth(0)
        self.line_pxe.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_pxe.setObjectName("line_pxe")
        self.gridLayout.addWidget(self.line_pxe, 9, 0, 1, 4)
        self.textEdit_pxe_description = QtWidgets.QTextEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_pxe_description.sizePolicy().hasHeightForWidth())
        self.textEdit_pxe_description.setSizePolicy(sizePolicy)
        self.textEdit_pxe_description.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.textEdit_pxe_description.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.textEdit_pxe_description.setStyleSheet("")
        self.textEdit_pxe_description.setFrameShape(QtWidgets.QFrame.Box)
        self.textEdit_pxe_description.setFrameShadow(QtWidgets.QFrame.Raised)
        self.textEdit_pxe_description.setLineWidth(2)
        self.textEdit_pxe_description.setMidLineWidth(0)
        self.textEdit_pxe_description.setLineWrapMode(QtWidgets.QTextEdit.WidgetWidth)
        self.textEdit_pxe_description.setReadOnly(True)
        self.textEdit_pxe_description.setOverwriteMode(False)
        self.textEdit_pxe_description.setAcceptRichText(True)
        self.textEdit_pxe_description.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textEdit_pxe_description.setObjectName("textEdit_pxe_description")
        self.gridLayout.addWidget(self.textEdit_pxe_description, 2, 3, 1, 1)
        self.label_pxe_path = QtWidgets.QLabel(self.centralwidget)
        self.label_pxe_path.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_path.sizePolicy().hasHeightForWidth())
        self.label_pxe_path.setSizePolicy(sizePolicy)
        self.label_pxe_path.setObjectName("label_pxe_path")
        self.gridLayout.addWidget(self.label_pxe_path, 7, 0, 1, 1)
        self.comboBox_pxe_eth = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_pxe_eth.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_pxe_eth.sizePolicy().hasHeightForWidth())
        self.comboBox_pxe_eth.setSizePolicy(sizePolicy)
        self.comboBox_pxe_eth.setMinimumSize(QtCore.QSize(100, 0))
        self.comboBox_pxe_eth.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.comboBox_pxe_eth.setObjectName("comboBox_pxe_eth")
        self.gridLayout.addWidget(self.comboBox_pxe_eth, 4, 3, 1, 1)
        self.label_pxe_pxe = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_pxe_pxe.sizePolicy().hasHeightForWidth())
        self.label_pxe_pxe.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        font.setKerning(True)
        self.label_pxe_pxe.setFont(font)
        self.label_pxe_pxe.setStyleSheet(" font-size:18pt; font-weight:600; font-style:italic; color:#1a5fb4")
        self.label_pxe_pxe.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pxe_pxe.setObjectName("label_pxe_pxe")
        self.gridLayout.addWidget(self.label_pxe_pxe, 0, 0, 1, 4)
        self.pushButton_pxe_apply = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_pxe_apply.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_pxe_apply.sizePolicy().hasHeightForWidth())
        self.pushButton_pxe_apply.setSizePolicy(sizePolicy)
        self.pushButton_pxe_apply.setMinimumSize(QtCore.QSize(120, 0))
        self.pushButton_pxe_apply.setSizeIncrement(QtCore.QSize(0, 0))
        self.pushButton_pxe_apply.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.pushButton_pxe_apply.setInputMethodHints(QtCore.Qt.ImhNone)
        self.pushButton_pxe_apply.setIconSize(QtCore.QSize(16, 16))
        self.pushButton_pxe_apply.setAutoDefault(False)
        self.pushButton_pxe_apply.setFlat(False)
        self.pushButton_pxe_apply.setObjectName("pushButton_pxe_apply")
        self.gridLayout.addWidget(self.pushButton_pxe_apply, 10, 3, 1, 1)
        self.label_pxe_state = QtWidgets.QLabel(self.centralwidget)
        self.label_pxe_state.setObjectName("label_pxe_state")
        self.gridLayout.addWidget(self.label_pxe_state, 1, 3, 1, 1)
        MainPxeWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainPxeWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1075, 22))
        self.menubar.setObjectName("menubar")
        self.menu_LocalSettings = QtWidgets.QMenu(self.menubar)
        self.menu_LocalSettings.setObjectName("menu_LocalSettings")
        self.menu_RemoteSettings = QtWidgets.QMenu(self.menubar)
        self.menu_RemoteSettings.setObjectName("menu_RemoteSettings")
        self.menu_NetworkScanner = QtWidgets.QMenu(self.menubar)
        self.menu_NetworkScanner.setObjectName("menu_NetworkScanner")
        MainPxeWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainPxeWindow)
        self.statusbar.setObjectName("statusbar")
        MainPxeWindow.setStatusBar(self.statusbar)
        self.action_Exit = QtWidgets.QAction(MainPxeWindow)
        self.action_Exit.setObjectName("action_Exit")
        self.action_MainSettings = QtWidgets.QAction(MainPxeWindow)
        self.action_MainSettings.setObjectName("action_MainSettings")
        self.action_OpenRemoteSettings = QtWidgets.QAction(MainPxeWindow)
        self.action_OpenRemoteSettings.setObjectName("action_OpenRemoteSettings")
        self.action_ChangeSettings = QtWidgets.QAction(MainPxeWindow)
        self.action_ChangeSettings.setObjectName("action_ChangeSettings")
        self.action_PXE = QtWidgets.QAction(MainPxeWindow)
        self.action_PXE.setObjectName("action_PXE")
        self.action_Scanner = QtWidgets.QAction(MainPxeWindow)
        self.action_Scanner.setObjectName("action_Scanner")
        self.action_NetworkDevice = QtWidgets.QAction(MainPxeWindow)
        self.action_NetworkDevice.setObjectName("action_NetworkDevice")
        self.action_Authorization = QtWidgets.QAction(MainPxeWindow)
        self.action_Authorization.setObjectName("action_Authorization")
        self.menu_LocalSettings.addAction(self.action_MainSettings)
        self.menu_LocalSettings.addAction(self.action_ChangeSettings)
        self.menu_LocalSettings.addAction(self.action_PXE)
        self.menu_LocalSettings.addSeparator()
        self.menu_LocalSettings.addAction(self.action_Exit)
        self.menu_RemoteSettings.addAction(self.action_OpenRemoteSettings)
        self.menu_NetworkScanner.addAction(self.action_Scanner)
        self.menu_NetworkScanner.addAction(self.action_NetworkDevice)
        self.menu_NetworkScanner.addAction(self.action_Authorization)
        self.menubar.addAction(self.menu_LocalSettings.menuAction())
        self.menubar.addAction(self.menu_RemoteSettings.menuAction())
        self.menubar.addAction(self.menu_NetworkScanner.menuAction())

        self.retranslateUi(MainPxeWindow)
        QtCore.QMetaObject.connectSlotsByName(MainPxeWindow)
        MainPxeWindow.setTabOrder(self.textEdit_pxe_description, self.comboBox_pxe_eth)
        MainPxeWindow.setTabOrder(self.comboBox_pxe_eth, self.checkBox_pxe_auto)
        MainPxeWindow.setTabOrder(self.checkBox_pxe_auto, self.checkBox_pxe_desktop)
        MainPxeWindow.setTabOrder(self.checkBox_pxe_desktop, self.pushButton_pxe_path)
        MainPxeWindow.setTabOrder(self.pushButton_pxe_path, self.lineEdit_pxe_path)

    def retranslateUi(self, MainPxeWindow):
        _translate = QtCore.QCoreApplication.translate
        MainPxeWindow.setWindowTitle(_translate("MainPxeWindow", "Настройщик ОС Linux"))
        MainPxeWindow.setStatusTip(_translate("MainPxeWindow", "Настройка PXE сервера"))
        self.checkBox_pxe_desktop.setStatusTip(_translate("MainPxeWindow", "Ярлык программы на рабочем столе для текущего пользователя"))
        self.checkBox_pxe_change.setText(_translate("MainPxeWindow", "Настроить"))
        self.radioButton_ins.setStatusTip(_translate("MainPxeWindow", "Установить программу запуска PXE сервера"))
        self.radioButton_ins.setText(_translate("MainPxeWindow", "Установить"))
        self.label_pxe_auto.setStatusTip(_translate("MainPxeWindow", "Автостарт программы запуска PXE сервера"))
        self.label_pxe_auto.setText(_translate("MainPxeWindow", "Автостарт:"))
        self.pushButton_pxe_path.setStatusTip(_translate("MainPxeWindow", "Путь до файла образа диска с pxe сервером"))
        self.pushButton_pxe_path.setText(_translate("MainPxeWindow", "..."))
        self.lineEdit_pxe_path.setStatusTip(_translate("MainPxeWindow", "Полный путь..."))
        self.label_pxe_eth.setStatusTip(_translate("MainPxeWindow", "Сетевой интерфейс локальной машины через который будет осуществляться связь с PXE сервером"))
        self.label_pxe_eth.setText(_translate("MainPxeWindow", "Сетевой интерфейс:"))
        self.radioButton_del.setStatusTip(_translate("MainPxeWindow", "Удалить программу запуска PXE сервера"))
        self.radioButton_del.setText(_translate("MainPxeWindow", "Удалить"))
        self.checkBox_pxe_auto.setStatusTip(_translate("MainPxeWindow", "Автостарт программы запуска PXE сервера"))
        self.label_pxe_desktop.setStatusTip(_translate("MainPxeWindow", "Ярлык программы на рабочем столе для текущего пользователя"))
        self.label_pxe_desktop.setText(_translate("MainPxeWindow", "Ярлык:"))
        self.textEdit_pxe_description.setStatusTip(_translate("MainPxeWindow", "Описание"))
        self.textEdit_pxe_description.setHtml(_translate("MainPxeWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#ffffff;\">отс</span>PXE сервер - образ виртуального диска на основе Debian, разработанный АО &quot;ФЦНИВТ &quot;СНПО ЭЛЕРОН&quot;. Позволяет в автоматическом режиме по сети установливать различные операционные системы такие как: AstraLinux 1.4, AstraLinux 1.5, AstraLinux 1.6.</p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#ffffff;\">отс</span>Данный установщик позволяет настроить запуск образа pxe сервера. Образ должен быть заранее скопирован на локальную машину.    Дополнительно необхидимо иметь свободный сетевой интерфейс подключенный к комутатору.</p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#ffffff;\">отс</span>Для корректного запуска программы необходимо что в BIOS материнской платы для процессора был включен следующий параметр: </p></body></html>"))
        self.label_pxe_path.setStatusTip(_translate("MainPxeWindow", "Путь до файла образа диска с pxe сервером"))
        self.label_pxe_path.setText(_translate("MainPxeWindow", "Путь:"))
        self.comboBox_pxe_eth.setStatusTip(_translate("MainPxeWindow", "Сетевой интерфейс локальной машины через который будет осуществляться связь с PXE сервером"))
        self.label_pxe_pxe.setText(_translate("MainPxeWindow", "Настройка PXE сервера"))
        self.pushButton_pxe_apply.setText(_translate("MainPxeWindow", "Применить"))
        self.label_pxe_state.setText(_translate("MainPxeWindow", "Состояние: "))
        self.menu_LocalSettings.setTitle(_translate("MainPxeWindow", "Локальная настройка"))
        self.menu_RemoteSettings.setTitle(_translate("MainPxeWindow", "Удалённая настройка"))
        self.menu_NetworkScanner.setTitle(_translate("MainPxeWindow", "Сканер сети"))
        self.action_Exit.setText(_translate("MainPxeWindow", "Выход"))
        self.action_Exit.setStatusTip(_translate("MainPxeWindow", "Выход из программы"))
        self.action_MainSettings.setText(_translate("MainPxeWindow", "Основные параметры"))
        self.action_MainSettings.setStatusTip(_translate("MainPxeWindow", "Включает в себя настройку основных (общих) параметров системы"))
        self.action_OpenRemoteSettings.setText(_translate("MainPxeWindow", "Открыть"))
        self.action_OpenRemoteSettings.setStatusTip(_translate("MainPxeWindow", "Настройка удаленных машин"))
        self.action_ChangeSettings.setText(_translate("MainPxeWindow", "Настраиваемые параметры ОС"))
        self.action_ChangeSettings.setStatusTip(_translate("MainPxeWindow", "Включает в себя настройку индивидуальных параметров системы таких как имя компьютера, сетевые настройки и т.д."))
        self.action_PXE.setText(_translate("MainPxeWindow", "Настройка PXE сервера"))
        self.action_PXE.setStatusTip(_translate("MainPxeWindow", "Установка и настройка PXE сервера"))
        self.action_Scanner.setText(_translate("MainPxeWindow", "Сканер"))
        self.action_Scanner.setStatusTip(_translate("MainPxeWindow", "Позволяет выполнить сканирование сети"))
        self.action_NetworkDevice.setText(_translate("MainPxeWindow", "Список устройств"))
        self.action_NetworkDevice.setStatusTip(_translate("MainPxeWindow", "Отображает список сетевых устройств в сети"))
        self.action_Authorization.setText(_translate("MainPxeWindow", "Авторизация"))
        self.action_Authorization.setStatusTip(_translate("MainPxeWindow", "Проверка и ввод данных для получения доступа к удалённым устройствам"))
